nameOverride: ""

subcharts:
  ingestion-traces: true
  ingestion-logs: true
  ingestion-metrics: true
  query: true
  dashboard: true

#############################################################

ingestion-logs:

  replicaCount: 1

  containerName: ""

  image:
    registry: quay.io
    username: zagaos
    name: apm-ingestion-pyiceberg
    pullPolicy: IfNotPresent
    tag: ecfa9ce
    strategy: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}

  serviceAccount:
    create: false
    annotations: {}
    name: ""

  securityContext: {}

  ports: {}

  service:
    - enabled: false
      serviceType: ClusterIP
    - enabled: false
      serviceType: LoadBalancer


  secretsEnv: {}

  configmapEnv:
    - name: ""
      mount: ""
      mountPath: ""
      filePath: false
      data:
        BUCKET_NAME: 's3a://observability-logs/logs'
        CONSUMER_GROUP_ID: apmlogs
        KAFKA_TOPIC: apmlogs
        NAME_SPACE: apm_logs
        SCRIPT_TO_RUN: logs
        TABLE_NAME: logs
        KAFKA_BOOTSTRAP_SERVER: 'telemetry-kafka-bootstrap.observability-kafka.svc.cluster.local:9092'
        URI: 'thrift://hive-metastore.observability-datamesh.svc.cluster.local:9083'
        S3_ENDPOINT: 'http://minio.observability-datamesh.svc.cluster.local:9000'
        ACCESS_KEY: minioAdmin
        SECRET_KEY: minio1234

  probes:
    readiness:

    liveness:


  volumes: {}

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

#########################################

ingestion-traces:

  replicaCount: 1

  containerName: ""

  image:
    registry: quay.io
    username: zagaos
    name: apm-ingestion-pyiceberg
    pullPolicy: IfNotPresent
    tag: ecfa9ce
    strategy: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}

  serviceAccount:
    create: false
    annotations: {}
    name: ""

  securityContext: {}

  ports: {}

  service:
    - enabled: false
      serviceType: ClusterIP
    - enabled: false
      serviceType: LoadBalancer


  secretsEnv: {}

  configmapEnv:
    - name: ""
      mount: ""
      mountPath: ""
      filePath: false
      data:
        BUCKET_NAME: 's3a://observability-traces/traces'
        CONSUMER_GROUP_ID: apmtraces
        KAFKA_TOPIC: apmtraces
        NAME_SPACE: apm_traces
        SCRIPT_TO_RUN: traces
        TABLE_NAME: traces
        KAFKA_BOOTSTRAP_SERVER: 'telemetry-kafka-bootstrap.observability-kafka.svc.cluster.local:9092'
        URI: 'thrift://hive-metastore.observability-datamesh.svc.cluster.local:9083'
        S3_ENDPOINT: 'http://minio.observability-datamesh.svc.cluster.local:9000'
        ACCESS_KEY: minioAdmin
        SECRET_KEY: minio1234

  probes:
    readiness:

    liveness:


  volumes: {}

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

########################################

ingestion-metrics:

  replicaCount: 1

  containerName: ""

  image:
    registry: quay.io
    username: zagaos
    name: apm-ingestion-pyiceberg
    pullPolicy: IfNotPresent
    tag: ecfa9ce
    strategy: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}

  serviceAccount:
    create: false
    annotations: {}
    name: ""

  securityContext: {}

  ports: {}

  service:
    - enabled: false
      serviceType: ClusterIP
    - enabled: false
      serviceType: LoadBalancer


  secretsEnv: {}

  configmapEnv:
    - name: ""
      mount: ""
      mountPath: ""
      filePath: false
      data:
        BUCKET_NAME: 's3a://observability-metrics/metrics'
        CONSUMER_GROUP_ID: apm_metric
        KAFKA_TOPIC: apmmetrics
        NAME_SPACE: apm_metrics
        SCRIPT_TO_RUN: metrics
        TABLE_NAME: metric
        KAFKA_BOOTSTRAP_SERVER: 'telemetry-kafka-bootstrap.observability-kafka.svc.cluster.local:9092'
        URI: 'thrift://hive-metastore.observability-datamesh.svc.cluster.local:9083'
        S3_ENDPOINT: 'http://minio.observability-datamesh.svc.cluster.local:9000'
        ACCESS_KEY: minioAdmin
        SECRET_KEY: minio1234

  probes:
    readiness:

    liveness:


  volumes: {}

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}


#############################################

query:

  replicaCount: 1

  containerName: ""

  image:
    registry: quay.io
    username: zagaos
    name: apm-query-pyiceberg
    pullPolicy: IfNotPresent
    tag: ce4cdad
    strategy: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  serviceAccount:
    create: false
    annotations: {}
    name: ""


  ports:
    - name: https
      subdomainName: infra-query
      port: 8000
      protocol: TCP
      targetPort: 8000
      routePolicy:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect

  service:
    - enabled: true
      serviceType: ClusterIP
    - enabled: false
      serviceType: LoadBalancer

  routes:
    enabled: true
    tls: false
    annotations: {}

  ingress:
    enabled: false
    className: ""
    tls: false
    annotations: {}

  secretsEnv: {}

  configmapEnv:
    - name: ""
      mount: ""
      mountPath: ""
      data:
        PY_IO_IMPL: pyiceberg.io.pyarrow.PyArrowFileIO
        MINIO_SECRET_ACCSESS_KEY: minio1234
        TRACE_NAME_SPACE: apm_traces
        LOG_NAME_SPACE: apm_logs
        MINIO_ACCSESS_KEY_ID: minioAdmin
        METRICS_NAME_SPACE: apm_metrics
        HIVE_THRIFT_URI: 'thrift://hive-metastore.observability-datamesh.svc.cluster.local:9083'
        TRACE_TABLE_NAME: traces_data
        LOG_TABLE_NAME: logs_data
        METRICS_TABLE_NAME: metrics_data
        MINIO_ENDPOINT: 'http://minio.observability-datamesh.svc.cluster.local:9000'

  probes:
    readiness:
    liveness:

  volumes: {}

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

###########################################################

dashboard:

  replicaCount: 1

  containerName: ""

  image:
    registry: quay.io
    username: zagaos
    name: apm-dashboard-observai
    pullPolicy: IfNotPresent
    tag: 2675d6f
    strategy: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  serviceAccount:
    create: false
    annotations: {}
    name: ""


  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
      subdomainName: apm-dashboard
      routePolicy:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect

  service:
    - enabled: true
      serviceType: ClusterIP
    - enabled: false
      serviceType: LoadBalancer

  routes:
    enabled: true
    tls: false
    annotations: {}

  ingress:
    enabled: false
    className: ""
    tls: false
    annotations: {}

  secretsEnv: {}

  configmapEnv: {}

  probes:
    readiness:
    liveness:

  volumes: {}

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}