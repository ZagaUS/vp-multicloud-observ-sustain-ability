replicaCount: 1

image:
  registry: quay.io
  username: zagaos
  name: apm-ingestion-pyiceberg
  tag: ecfa9ce
  pullPolicy: IfNotPresent
  # strategy: Recreate
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

serviceAccount:
  create: false
  automount: true
  annotations: {}
  name: ""

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # runAsGroup: 1000

ports: {}
  # - name: http
  #   port: 8000
  #   protocol: TCP
  #   targetPort: 8000


service: {}
  # - enabled: true
  #   serviceType: ClusterIP

  # - enabled: false
  #   serviceType: LoadBalancer


secretsEnv: {}
#   - name: trino-coordinator-secret
#     mount: ""
#     mountPath: ""
#     data:
#       AWS_ACCESS_KEY_ID: minioAdmin
#       AWS_SECRET_KEY_ID: admin1234
#       INTER_COMM_SHARED_SECRET: kzs71nsYBRr8cysT62zb6P+VT8YsVi/eASfNKUJkvPDce6aof6FLyM/0EDA8qK46P8sD2jXBTTe7cKX0MEqTS2UNZ7YdYWHUUoSG2nLgEryZbqlEkguYWs2dSSYkzv9DIPMtRvGxmNdQ6HGGscrqsFkeK7kSCd6mn5YNskIv6Z665gquqq+SlqV5UylFDcXhB6Z7oWuZ2fq3WONVWtTIhYP73YO8iDORG2afkqPQhRKTw848YQVrcqKAIOX6sirMb5KE1BP0yXz533J71vFuMqkvTBrFV3lkvAq+/7W4iA9Xn9WDJ8TGgcwB7jFOLH9htKYrXtO2XgMsWxizi7XbFzXsPEreqndhZEX7i6U0/K22kCWRy7/lcH+JMQAzq3J+qxl1KqTLVTfu3iSIKUj093/wR0EPcH282a+HMzk/5E1aGk3uV40M/1wQwlEDzBRaGtLtW7tyFHX+sc29nLgkOFAPknwqnYoSR7FDEgO+CrB00zNeY1lS1Xx8OCEfGgg+y5zK7pSMm7cuq8PHjENXCsWOY3xNkJLKsf9mWiWLZhxE1G6EQMG8WPz2r+DhBskTaoHaRPCfcD3/2vaDEjvfK/9kek94g00JcjJB9HQQe3tINmEBxkA8SjIWZe40kcPU0hbKqeA8WFzUgwsB/2KxFvTcPpRvNKseozZZxL/2Dlk=
#   - name: trino-coordinator-keystore
#     mount: true
#     mountPath: /etc/trino/keystore
#     filePath: true
#     data:
#       - name: keystore.jks
#         path: configs/keystores/keystore.jks
#   - name: trino-coordinator-keystore-p12
#     mount: true
#     mountPath: /etc/trino/trino-p12
#     filePath: true
#     data:
#       - name: trino.p12
#         path: configs/keystores/trino.p12

configmapEnv:
  - name: ""

    data:
      KAFKA_BOOTSTRAP_SERVER: 'telemetry-kafka-bootstrap.observability-kafka.svc.cluster.local:9092'
      URI: 'thrift://hive-metastore.observability-datamesh.svc.cluster.local:9083'
      S3_ENDPOINT: 'http://minio.observability-datamesh.svc.cluster.local:9000'
      ACCESS_KEY: minioAdmin
      SECRET_KEY: minio1234
      KAFKA_TOPIC: apmlogs
      TABLE_NAME: logs
      NAME_SPACE: apm_logs
      CONSUMER_GROUP_ID: 'apmlogs'
      SCRIPT_TO_RUN: logs
      BUCKET_NAME: 's3a://observability-logs/logs'

probes:
  readiness:
  liveness:

volumes: {}

volumeMounts: {}

resources: 
  limits:
    cpu: 450m
    memory: 3Gi
  requests:
    cpu: 400m
    memory: 2Gi
  terminationMessagePath: /dev/termination-log
  terminationMessagePolicy: File
  imagePullPolicy: IfNotPresent
restartPolicy: Always

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%

routes: {}

ingress: {}

nodeSelector: {}

tolerations: []

affinity: {}